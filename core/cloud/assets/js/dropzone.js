'use strict'
import Dropzone from 'dropzone'
Dropzone.autoDiscover = false

export function Upload(options) {
    // console.log('üíØ options', options)
    const lang = options.lang
    const message = lang.ru.message
    const position = 'topCenter' || options.position

    let maxfilesexceeded = false
    const upload = new Dropzone('div#dropzone', {
        url: options.url,
        dictDefaultMessage: lang.ru.dropzone,
        acceptedFiles: options.acceptedFiles,
        // maxFiles: 3, //* –ª–∏–º–∏—Ç –Ω–∞ –∑–∞–≥—Ä—É–∑–∫—É —Ñ–∞–π–ª–æ–≤. –°–∫–æ–ª—å–∫–æ –≤—Å–µ–≥–æ –º–æ–∂–Ω–æ –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª–æ–≤
        uploadMultiple: options.uploadMultiple || false,
        parallelUploads: options.parallelUploads || 1,
        addRemoveLinks: options.addRemoveLinks || true,
        withCredentials: options.withCredentials || true,
        timeout: options.timeout || 600000,
        thumbnailWidth: options.thumbnailWidth || 240,
        thumbnailHeight: options.thumbnailHeight || 240,
        // previewTemplate: document.querySelector("#tpl").innerHTML
    })
    upload.on('sending', (file, xhr, formData) => {
        const csrf = document.querySelector('meta[name=csrf-token]').getAttributeNode('content').value
        // BUG:üêû –ï—Å–ª–∏ –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ñ–∞–π–ª–æ–≤ —Ç–æ –∫ –∫–∞–∂–¥–æ–º—É —Ñ–∞–π–ª—É –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è –∑–Ω–∞—á–µ–Ω–∏–µ
        // FIXME: –ö–æ –≤—Å–µ–º —Ñ–∞–π–ª–∞–º –æ–¥–∏–Ω csrf-token
        //TODO: –ö–æ –≤—Å–µ–º —Ñ–∞–π–ª–∞–º –æ–¥–∏–Ω csrf-token
        formData.append('csrf', csrf)
    })
    /** –í—ã–∑—ã–≤–∞–µ—Ç—Å—è –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ñ–∞–π–ª–∞, –∫–æ—Ç–æ—Ä—ã–π –±—ã–ª –æ—Ç–∫–ª–æ–Ω–µ–Ω, –ø–æ—Å–∫–æ–ª—å–∫—É –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–∞–π–ª–æ–≤ –ø—Ä–µ–≤—ã—à–∞–µ—Ç –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ maxFiles. */
    upload.on('maxfilesexceeded', () => {
        //* NOTE: –£–¥–∞–ª—è–µ–º —Ñ–∞–π–ª—ã –∫ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–µ–≤—ã—Å–∏–≤—à–∏–µ –ª–∏–º–∏—Ç –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –¥–æ–±–∞–≤–ª—è–µ–º—ã—Ö –∫ –∑–∞–≥—Ä—É–∑–∫–µ –∑–∞ –æ–¥–∏–Ω —Ä–∞–∑
        // upload.removeFile(file)
        maxfilesexceeded = true
        _$.message('error', {
            title: message.limit.title,
            message: message.limit.success,
            position: position
        })
        // console.log('maxfilesexceeded===>')
    })

    // === === === === === === === === === === === ===
    //* –í—ã–∑—ã–≤–∞–µ—Ç—Å—è, –∫–æ–≥–¥–∞ –∑–∞–≥—Ä—É–∑–∫–∞ –±—ã–ª–∞ —É—Å–ø–µ—à–Ω–æ–π –∏–ª–∏ –æ—à–∏–±–æ—á–Ω–æ–π. */
    // === === === === === === === === === === === ===
    upload.on('complete', (file) => {
        // FIX: DROPZONE - –¥–æ–±–∞–≤–∏—Ç—å –≤—Å–ø–ª—ã–≤–∞—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –Ω–µ—É–¥–∞—á–Ω–æ–π –∏–ª–∏ —É–¥–∞—á–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞
        if (file.status === 'error' && maxfilesexceeded === false) {
            _$.message('error', {
                title: message.error.title,
                message: message.error.success,
                position: position
            })
            upload.removeFile(file)
        } else if (file.status === 'success') {
            _$.message('success', {
                title: message.success.title,
                message: message.success.done,
                position: position
            })
        }
    })

    return upload
}